Select *
From newproject.CovidDeaths
Where continent is not null 
order by 3,4

Select *
From newproject.CovidVaccinations
Where continent is not null 
order by 3,4


Select Location, date, total_cases, new_cases, total_deaths, population
From newproject.CovidDeaths
Where continent is not null 
order by 1,2


-- Compare total Cases to total deaths
-- Shows likelihood of dying if you contract covid in the UK

Select Location, date, total_cases,total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
From newproject.CovidDeaths
Where location like '%Kingdom%'
order by 1,2


-- Total Cases vs Population
-- Percentage of UK that is infected with Covid

Select Location, date, Population, total_cases,  (total_cases/population)*100 as PercentPopulationInfected
From newproject.CovidDeaths
order by 1,2


-- Selecting countries with highest infection rates compared to population

Select Location, Population, MAX(total_cases) as HighestInfectionCount,  Max((total_cases/population))*100 as PercentPopulationInfected
From newproject.CovidDeaths
Group by Location, Population
order by PercentPopulationInfected desc

-- To date, roughly 23% of the UK population infected with covid.


-- Countries with highest death count per population 

Select Location, MAX(cast(Total_deaths as int)) as TotalDeathCount
From newproject.CovidDeaths
Where continent is not null 
Group by Location
order by TotalDeathCount desc



-- death count per population by Continent

Select continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
From newproject.CovidDeaths
Where continent is not null 
Group by continent
order by TotalDeathCount desc



-- GLOBAL NUMBERS

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From newproject.CovidDeaths
where continent is not null 
Group By date
order by 1,2



-- Total population vs Vaccinations 
-- Showing percentage of population that has has at least one vaccine 

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
From newproject.CovidDeaths as dea
Join newproject.CovidVaccinations as vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
order by 2,3


-- Using a Temporary Table to perform Calculations

DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From newproject.CovidDeaths as dea
Join newproject.CovidVaccinations as vac
	On dea.location = vac.location
	and dea.date = vac.date


Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated

-- Using CTE 

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From newproject.CovidDeaths as dea
Join newproject.CovidVaccinations as vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
--order by 2,3
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac


-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From newproject.CovidDeaths as dea
Join newproject.CovidVaccinations as vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
